"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/page.js":
/*!*************************!*\
  !*** ./src/app/page.js ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _components_Footer_Footer_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/Footer/Footer.jsx */ \"(app-pages-browser)/./src/components/Footer/Footer.jsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_Header_Header_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Header/Header.jsx */ \"(app-pages-browser)/./src/components/Header/Header.jsx\");\n/* harmony import */ var _page_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./page.css */ \"(app-pages-browser)/./src/app/page.css\");\n/* harmony import */ var _components_SliderNews_SliderNews_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/SliderNews/SliderNews.js */ \"(app-pages-browser)/./src/components/SliderNews/SliderNews.js\");\n/* harmony import */ var _components_Corporation_Corporation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/Corporation/Corporation.js */ \"(app-pages-browser)/./src/components/Corporation/Corporation.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n/* eslint-disable */ \n\n\n\n\n\n\n\n\nconst page = ()=>{\n    _s();\n    const initialData = [\n        {\n            content: \"İ\\xe7erik 1\"\n        },\n        {\n            content: \"İ\\xe7erik 2\"\n        },\n        {\n            content: \"İ\\xe7erik 3\"\n        },\n        {\n            content: \"İ\\xe7erik 4\"\n        },\n        {\n            content: \"İ\\xe7erik 5\"\n        },\n        {\n            content: \"İ\\xe7erik 6\"\n        },\n        {\n            content: \"İ\\xe7erik 7\"\n        },\n        {\n            content: \"İ\\xe7erik 8\"\n        },\n        {\n            content: \"İ\\xe7erik 9\"\n        },\n        {\n            content: \"İ\\xe7erik 10\"\n        }\n    ];\n    const initialData2 = [\n        {\n            content: \"İ\\xe7erik 1\"\n        },\n        {\n            content: \"İ\\xe7erik 2\"\n        },\n        {\n            content: \"İ\\xe7erik 3\"\n        },\n        {\n            content: \"İ\\xe7erik 4\"\n        }\n    ];\n    const initialData3 = [\n        {\n            content: \"İ\\xe7erik 5\"\n        },\n        {\n            content: \"İ\\xe7erik 6\"\n        },\n        {\n            content: \"İ\\xe7erik 7\"\n        }\n    ];\n    const initialData4 = [\n        {\n            content: \"İ\\xe7erik 8\"\n        },\n        {\n            content: \"İ\\xe7erik 9\"\n        },\n        {\n            content: \"İ\\xe7erik 10\"\n        }\n    ];\n    const [isOpenArray, setIsOpenArray] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(new Array(10).fill(false));\n    const [chooseClassname, setchooseClassname] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const [chooseClassname2, setchooseClassname2] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0);\n    const togglePanel = (index)=>{\n        const newArray = [\n            ...isOpenArray\n        ];\n        newArray[index] = !newArray[index];\n        setIsOpenArray(newArray);\n    };\n    function handleButtonClick() {\n        setchooseClassname(!chooseClassname);\n    }\n    function handleButtonClick2() {\n        setchooseClassname2(0);\n    }\n    function handleButtonClick3() {\n        setchooseClassname2(1);\n    }\n    function handleButtonClick4() {\n        setchooseClassname2(2);\n    }\n    function handleButtonClick5() {\n        setchooseClassname2(3);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Header_Header_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\User\\\\Desktop\\\\GuysGroup\\\\guyscite\\\\src\\\\app\\\\page.js\",\n                lineNumber: 79,\n                columnNumber: 5\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\User\\\\Desktop\\\\GuysGroup\\\\guyscite\\\\src\\\\app\\\\page.js\",\n            lineNumber: 78,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false);\n};\n_s(page, \"A4fGZi+HqknZQutz0RmF/+IIsus=\");\n/* harmony default export */ __webpack_exports__[\"default\"] = (page);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.js\n"));

/***/ })

});